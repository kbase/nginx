server {
        root /kb/deployment;
        index home.html home.shtml;

        # Name of this site
        server_name ci.kbase.us;

        # Setup a DNS resolver
        resolver 8.8.8.8;

        location / {
                root /kb/deployment/services/kbase-ui;
                index index.html;
                #ssi on;
                ssi_silent_errors off;
                allow all;

                #auth_basic     "KBase Dev Website";
                #auth_basic_user_file htpasswd;
                return  301 https://ci.kbase.us$request_uri;
        }

        # This is for letsencrypt
        location ^~ /.well-known {
                root /certs/;
                allow all;
        }

        # Dynamic proxy manager
        location ^~ /proxy_map {
                default_type 'application/json';
                allow 127.0.0.1;
                allow 172.17.0.0/16;
                deny all;

                set $uri_base '/proxy_map';
                content_by_lua 'proxymgr:set_proxy()';
        }

        location ^~ /narrative_shutdown {
                allow 127.0.0.1;
                allow 172.17.0.0/16;
                default_type 'application/json';

                set $uri_base '/proxy_map';
                content_by_lua 'proxymgr:narrative_shutdown()';
        }

        location ^~ /narrative/ {
                default_type 'text/plain';
                error_page 401 /index.html;

                set $target '';

                access_by_lua '
                        proxymgr:use_proxy()
                ';
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass http://$target;
                proxy_redirect off;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_read_timeout 86400;
        }
}

# Proxy for the nginx remote api
server {
        listen 127.0.0.1:65000;
        ssl off;

        auth_basic_user_file /etc/nginx/htpasswd;
        location / {
                proxy_pass http://unix:/var/run/docker.sock:/;
                }
}

# Proxy for globus online - non-blocking lua code doesn't handle https, so
# we build an internal proxy to the Globus Nexus API endpoint
server {
        listen 127.0.0.1:65001;

        location / {
                proxy_pass https://nexus.api.globusonline.org/;
                proxy_set_header        Host    nexus.api.globusonline.org;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}

# Proxy added to support narrative
server {
        listen 127.0.0.1:65002;
        location ~ /(.*) {
                resolver 8.8.8.8 valid=5s;
                set $auth "ci.kbase.us/services/auth";
                proxy_pass https://$auth/$1;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_intercept_errors on;
                error_page 301 302 307 = @handle_redirect;
        }
        location @handle_redirect {
                    resolver 8.8.8.8 valid=5s;
                    set $saved_redirect_loc '$upstream_http_location';
                    proxy_pass $saved_redirect_loc;
        }
}


# Main HTTPS server.  This handles services and the narrative plus other stuff
#
# XXX the rate below is 1r/m because that's the slowest that this version of nginx will allow
# there is a patch to support tth which would allow one request every 16 minutes 
# may no longer need this
# limit_req_zone $1 zone=shockapi:10m rate=1r/m;

# this resolver is the internal rancher resolver
# see https://github.com/rancher/rancher/issues/7691#issuecomment-277635645
resolver {{ default .Env.resolver "169.254.169.250" }} valid=5s ipv6=off;

server {
        listen 443;
        server_name ci.kbase.us localhost;

        # taken from next-www
        client_max_body_size 100000m;
        client_body_temp_path /tmp 1 2;
        proxy_max_temp_file_size 0;
        proxy_headers_hash_max_size 4096;
        proxy_headers_hash_bucket_size 4096;
        # added kkeller 30sep2015 for kbase-2777
        proxy_request_buffering off;

        ssl on;
        # Letsencrypt generated certs
        ssl_certificate /etc/letsencrypt/live/ci.kbase.us/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ci.kbase.us/privkey.pem;
        # godaddy certs
        #ssl_certificate /etc/nginx/ssl/server.chained.crt;
        #ssl_certificate_key /etc/nginx/ssl/server.key;

        ssl_session_timeout 5m;
        #ssl_protocols TLSv1;
        #ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
        ssl_prefer_server_ciphers on;

        root /kb/deployment;
        index home.html home.shtml;

        access_by_lua_block {
                ngx.header["X-kbaseuser"] = proxymgr:get_session()
                return
        }

        location ^~ /bad_request {
                internal;
                content_by_lua '
                ngx.log(ngx.ERR, "badrequest")
                ';

                return 404;
        }

        ### auth2
        location ^~ /services/auth/ {
                proxy_pass http://auth2:8080/;
                proxy_cookie_path /login /services/auth/login;
                proxy_cookie_path /link /services/auth/link;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Authorization, Content-Type, Accept';
        }

        # Dynamic service rule.  This uses rancher DNS names to redirect
        # match urls with a / in it
        location ~ /dynserv/([^/]+)/(.*) {
                # try to address TASK-920 (spaces in URLs, for serving filenames generated
                # by tools which use spaces)
                # setting explicit vars seems to tell nginx not to mess with the uri
                set $dynservhost $1;
                set $dynservurl $2;
                proxy_pass http://$dynservhost:5000/$dynservurl;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        # match urls with no slash (to make it behave just like /)
        location ~ /dynserv/([^/]+)$ {
                    proxy_pass http://$1:5000/;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header Host $http_host;
                    proxy_set_header X-Forwarded-Proto $scheme;
        }

                # Dynamic proxy manager
        location ^~ /proxy_map {
                default_type 'application/json';
                allow 127.0.0.1;
                allow 172.17.0.0/16;
                deny all;

                set $uri_base '/proxy_map';
                content_by_lua 'proxymgr:set_proxy()';

        }
        # Shutdown utility
        location ^~ /narrative_shutdown {
                default_type 'application/json';
                allow 127.0.0.1;
                allow 172.17.0.0/16;

                set $uri_base '/narrative_shutdown';
                content_by_lua 'proxymgr:narrative_shutdown()';

        }

        # Narrative redirect rule
        location ^~ /narrative/ {
                default_type 'text/plain';
                error_page 401 /index.html;
                set $target '';

                access_by_lua '
                                proxymgr:use_proxy()
                ';
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass http://$target;
                proxy_redirect off;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_read_timeout 86400;
        }

        location ^~ /data_source_config.json {
                proxy_pass http://narrative-version:80/data_source_config.json;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /narrative_version {
                proxy_pass http://narrative-version:80/narrative_version;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        
        location ^~ /services/shock-direct {
            if ($kb_trusted) {
                return  302 http://ci.kbase.us:7044/;
            }
            return 404;
        }

        # Start of core service proxies
        #
        location ^~ /services/shock-api {
                proxy_pass http://shock:7044/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/userandjobstate {
                proxy_pass http://ujs:7083/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(ws)$ {
                set $servicehost $1;
                proxy_pass http://$servicehost:7058/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(ws)/(.*) {
                set $servicehost $1;
                set $serviceurl $2;
                proxy_pass http://$servicehost:7058/$serviceurl;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/handlemngr {
                proxy_pass http://handlemngr:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/handle_service {
                proxy_pass http://handleservice:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/handleservice {
                proxy_pass http://handleservice:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/narrative_method_store {
                proxy_pass http://narrativemethodstore:7125/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/catalog {
                proxy_pass http://catalog:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/service_wizard {
                proxy_pass http://servicewizard:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(njs_wrapper)$ {
                # the hostname is different from the url name
                set $servicehost njswrapper;
                # condor-based njsw at njswrapper on 8080
                proxy_pass http://$servicehost:8080/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(njs_wrapper)/(.*) {
                set $servicehost njswrapper;
                set $serviceurl $2;
                proxy_pass http://$servicehost:8080/$serviceurl;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/user_profile {
                proxy_pass http://userprofile:7126/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/data_import_export/ {
                proxy_pass http://dataimportexport:8200/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(searchapi)$ {
                set $servicehost $1;
                proxy_pass http://$servicehost:8080/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(searchapi)/(.*) {
                set $servicehost $1;
                set $serviceurl $2;
                proxy_pass http://$servicehost:8080/$serviceurl;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(search)$ {
                set $servicehost $1;
                proxy_pass http://$servicehost:7078/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(idmapper)/(.*) {
                set $servicehost $1;
                set $serviceurl $2;
                proxy_pass http://$servicehost:8080/$serviceurl$is_args$args;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ~ /services/(cache)/(.*) {
                set $servicehost $1;
                set $serviceurl $2;
                proxy_pass http://$servicehost:5000/$serviceurl;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/staging_service/ {
                proxy_pass http://ftp.kbase.us:3014/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/kb-ftp-api/v0/ {
                proxy_pass http://ftp.kbase.us:3004/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/kb-ftp-api/ {
                proxy_pass http://ftp.kbase.us:3004/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /services/relationengine/ {
                proxy_pass http://dev01.kbase.lbl.gov:29999/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
# IMPORTANT!!!!
# Keep this one at the end so that it only matches if all previous
# regex matches fail
#
        location ~ /(.*) {
                proxy_pass http://kbase-ui:80/$1;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

}
# End of https ci server block

#
# dockerhub-ci entries
# 
server {
        listen 80; ## listen for ipv4; this line is default and implied

        root /usr/share/nginx/www;
        index index.html index.htm;

        server_name dockerhub-ci.kbase.us;

        location / {
                limit_except GET HEAD OPTIONS {
                        # public berkeley ips
                        allow 128.3.56.0/24;
                        # private berkeley ips
                        allow 10.58.0.0/20;
                        allow 192.168.1.0/24;
                        # docker internal ips
                        allow 172.17.0.0/16;
                        # rancher internal ips
                        allow 10.42.0.0/16;
                        deny all;
                }
                proxy_pass http://ci-dockerregistry:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        # This is for letsencrypt
        location /.well-known {
                root /certs/;
                allow all;
        }
}

server {
        listen 443 ssl;
        server_name dockerhub-ci.kbase.us;

        ssl on;
        # letsencrypt certs
        ssl_certificate /etc/letsencrypt/live/ci.kbase.us/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ci.kbase.us/privkey.pem;
        ssl_session_timeout 5m;

        location / {
                limit_except GET HEAD OPTIONS {
                        # public berkeley ips
                        allow 128.3.56.0/24;
                        # private berkeley ips
                        allow 10.58.0.0/20;
                        allow 192.168.1.0/24;
                        # docker internal ips
                        allow 172.17.0.0/16;
                        # rancher internal ips
                        allow 10.42.0.0/16;
                        deny all;
                }
                proxy_pass http://ci-dockerregistry:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
}

# dockerhub-ciauth2 (for testing with auth2catalog)
server {
        listen 443 ssl;
        server_name dockerhub-ciauth2.kbase.us;

        ssl on;
        #ssl_certificate /etc/letsencrypt/live/ci.kbase.us/fullchain.pem;
        #ssl_certificate_key /etc/letsencrypt/live/ci.kbase.us/privkey.pem;
        ssl_certificate /etc/nginx/ssl/server.chained.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_session_timeout 5m;
}
