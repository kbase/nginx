server {

	root /usr/share/nginx/html/www;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost narrative narrative.kbase.us;
	#client_max_body_size 10m;
	return       301 https://narrative.kbase.us$request_uri;

	# Dynamic proxy manager
	location /proxy_map {
		default_type 'application/json';
		allow 127.0.0.1;
		allow 172.17.0.0/16;
		deny all;

		set $uri_base '/proxy_map';
		content_by_lua 'proxymgr:set_proxy()';
	}

	location /narrative_shutdown {
		allow 127.0.0.1;
		allow 172.17.0.0/16;
		default_type 'application/json';

		set $uri_base '/proxy_map';
		content_by_lua 'proxymgr:narrative_shutdown()';
	}

        # This is for letsencrypt
        location /.well-known {
                root /certs/;
                allow all;
        }

#End manual modification

	location /services {
		root /kb/docs;
		autoindex on;
	}

	location /doc {
		root /usr/share;
		autoindex on;
		allow 127.0.0.1;
		deny all;
	}

}


# HTTPS server
#
server {
	listen 443;
	server_name localhost narrative narrative.kbase.us;
	# Setup a DNS resolver
	# kkeller 13jul2017: should not need the rancher resolver here
#	resolver 169.254.169.250;
# try putting the docker resolver here
#	resolver 172.0.0.11;

	ssl on;
    # Letsencrypt generated certs
    ssl_certificate /etc/letsencrypt/live/narrative.kbase.us/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/narrative.kbase.us/privkey.pem;


	ssl_session_timeout 5m;

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
	ssl_prefer_server_ciphers on;

	#root /usr/share/nginx/html;
	root /usr/share/nginx/kbase-maintenance-site/htdocs;
	index index.html index.htm;

    access_by_lua_block {
            ngx.header["X-kbaseuser"] = proxymgr:get_session()
            return
    }

    # This is for letsencrypt
    location /.well-known {
            root /certs/;
            allow all;
    }

	location /services {
		root /kb/docs;
		autoindex on;
	}
    location ^~ /services/data_import_export {
            proxy_pass http://kbase.us:8201/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
    }

    #Begin manual modification

    # Added to support JGI import (NAR-856)
    rewrite ^/functional-site/(.*)$ /$1 last;

	location /ui {
		root /kb/deployment/services/kbase-ui;
		index index.html;
		#ssi on;
		ssi_silent_errors off;
		allow all;
	}

    #End manual modification
	location /doc {
		root /usr/share;
		autoindex on;
		allow 127.0.0.1;
		deny all;
	}

    ### auth2
	location ^~ /auth/ {
		proxy_pass https://kbase.us/services/auth/;
		proxy_cookie_path /login /auth/login;
		proxy_cookie_path /link /auth/link;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Real-IP $remote_addr;
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Authorization, Content-Type, Accept';
	}

	# Dynamic proxy manager
	location ^~ /proxy_map {
		default_type 'application/json';
		allow 127.0.0.1;
		allow 172.17.0.0/16;
		deny all;

		set $uri_base '/proxy_map';
		content_by_lua 'proxymgr:set_proxy()';

	}
	# Shutdown utility
	location ^~ /narrative_shutdown {
		default_type 'application/json';
		allow 127.0.0.1;
		allow 172.17.0.0/16;

		set $uri_base '/narrative_shutdown';
		content_by_lua 'proxymgr:narrative_shutdown()';

	}
    # Begin legacy
	location ^~ /narrative/ws.10779.obj.1 {
		return  301 https://narrative.kbase.us/narrativelegacy/ws.10779.obj.1;
	}
	location ^~ /narrative/ws.10786.obj.1 {
		return  301 https://narrative.kbase.us/narrativelegacy/ws.10786.obj.1;
	}
	location ^~ /narrative/ws.15122.obj.2 {
		return  301 https://narrative.kbase.us/narrativelegacy/ws.15122.obj.2;
	}
	location ^~ /narrative/ws.10824.obj.1 {
		return  301 https://narrative.kbase.us/narrativelegacy/ws.10824.obj.1;
	}
	location ^~ /narrative/ws.10778.obj.1 {
		return  301 https://narrative.kbase.us/narrativelegacy/ws.10778.obj.1;
	}
	location ^~ /narrative/ws.14533.obj.1 {
		return  301 https://narrative.kbase.us/narrativelegacy/ws.14533.obj.1;
	}
    # End legacy

	location ^~ /narrative/notebooks/ws.15122.obj.2 {
		return  301 https://narrative.kbase.us/narrativelegacy/ws.15122.obj.2;
	}

	# Narrative redirect rule
	location ^~ /narrative/ {
		default_type 'text/plain';
		error_page 401 /index.html;
		set $target '';

		access_by_lua '
			proxymgr:use_proxy()
		';
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;
		proxy_pass http://$target;
		proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_read_timeout 86400;
	}
	location ^~ /narrativelegacy/ {
		default_type 'text/plain';
		error_page 401 /index.html;
		set $target '';

		access_by_lua '
			proxymgr2:use_proxy()
		';
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-NginX-Proxy true;
		proxy_pass http://$target;
		proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_read_timeout 86400;
	}

    # for narrative version container
    location ^~ /narrative_version {
            set $servhost 172.17.0.16;
            set $servport 80;
            proxy_pass http://$servhost:$servport/narrative_version;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
    }

    # for testing kbase-ui container
    location ~ /services/kbase-ui/(.*) {
        # docker-compose-managed kbaseui instance
        # update IP if it changes
        set $servhost 172.17.0.17;
        set $servport 80;

        set $servurl $1;
        proxy_pass http://$servhost:$servport/$servurl;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # for live kbase-ui container
    location ~ /(.*) {
    # docker-compose-managed kbaseui instance
    # update IP if it changes
        set $servhost 172.17.0.17;
        set $servport 80;
        set $servurl $1;
        proxy_pass http://$servhost:$servport/$servurl;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
# Proxy	for the nginx remote api
server {
	listen 127.0.0.1:65000;
	ssl off;

	auth_basic_user_file /etc/nginx/htpasswd;
	location / {
		proxy_pass http://unix:/var/run/docker.sock:/;
		}
}

# Proxy for globus online - non-blocking lua code doesn't handle https, so
# we build an internal proxy to the Globus Nexus API endpoint
server {
	listen 127.0.0.1:65001;

	location / {
		proxy_pass https://nexus.api.globusonline.org/;
		proxy_set_header	Host	nexus.api.globusonline.org;
		proxy_set_header	X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}

server {
    listen 127.0.0.1:65002;
    location ~ /(.*) {
        resolver 140.221.43.7 valid=5s;
        set $auth "kbase.us/services/auth";
        proxy_pass https://$auth/$1;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_intercept_errors on;
        error_page 301 302 307 = @handle_redirect;
    }
    location @handle_redirect {
        resolver 140.221.43.7 valid=5s;
        set $saved_redirect_loc '$upstream_http_location';
        proxy_pass $saved_redirect_loc;
    }
}
