# Setup a DNS resolver in the http scope, not the server scope
resolver {{ default .Env.resolver "127.0.0.11" }} valid=5s ipv6=off;

server {
        root /kb/deployment;
        index home.html home.shtml;

        # Name of this site
        server_name {{ default .Env.server_name "localhost" }};

        location / {
                root /kb/deployment/services/kbase-ui;
                index index.html;
                #ssi on;
                ssi_silent_errors off;
                allow all;

                #auth_basic     "KBase Dev Website";
                #auth_basic_user_file htpasswd;
                return  301 https://ci.kbase.us$request_uri;
        }

        # This is for letsencrypt
        location ^~ /.well-known {
                root /certs/;
                allow all;
        }

        # Dynamic proxy manager
        location ^~ /proxy_map {
                default_type 'application/json';
                allow 127.0.0.1;
                allow 172.17.0.0/16;
                deny all;

                set $uri_base '/proxy_map';
                content_by_lua 'proxymgr:set_proxy()';
        }

        location ^~ /narrative_shutdown {
                allow 127.0.0.1;
                allow 172.17.0.0/16;
                default_type 'application/json';

                set $uri_base '/proxy_map';
                content_by_lua 'proxymgr:narrative_shutdown()';
        }

        location ^~ /narrative/ {
                default_type 'text/plain';
                error_page 401 /index.html;

                set $target '';

                access_by_lua '
                        proxymgr:use_proxy()
                ';
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass http://$target;
                proxy_redirect off;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_read_timeout 86400;
        }
        location ^~ /data_source_config.json {
                set $proxyhost narrative_version;
                proxy_pass http://$proxyhost:80/data_source_config.json;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /(narrative_version) {
                proxy_pass http://$1:80/narrative_version;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Dynamic service rule.  This usees rancher DNS names to redirect
        location ~ /dynserv/([^/\.\:]+)/(.*) {
                proxy_pass http://$1:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Anything under services gets proxied to the servicename port 80
        location ~ /services/([^/\.\:]+)/?(.*) {
                proxy_pass http://$1:8080/$2;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grandfathered entry for kbase-ui as root 
        location ~ /?(.*) {
                proxy_pass http://kbase-ui:8080/$1;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
}

# Proxy for the nginx remote api
server {
        listen 127.0.0.1:65000;
        ssl off;

        auth_basic_user_file /etc/nginx/htpasswd;
        location / {
                proxy_pass http://unix:/var/run/docker.sock:/;
                }
}

# Proxy for globus online - non-blocking lua code doesn't handle https, so
# we build an internal proxy to the Globus Nexus API endpoint
server {
        listen 127.0.0.1:65001;

        location / {
                proxy_pass https://nexus.api.globusonline.org/;
                proxy_set_header        Host    nexus.api.globusonline.org;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}

# Proxy added to support narrative
server {
        listen 127.0.0.1:65002;
        location ~ /(.*) {
                resolver 8.8.8.8 valid=5s;
                set $auth "127.0.0.1/services/auth";
                proxy_pass https://$auth/$1;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_intercept_errors on;
                error_page 301 302 307 = @handle_redirect;
        }
        location @handle_redirect {
                    resolver 8.8.8.8 valid=5s;
                    set $saved_redirect_loc '$upstream_http_location';
                    proxy_pass $saved_redirect_loc;
        }
}


# Main HTTPS server.  This handles services and the narrative plus other stuff
#
# XXX the rate below is 1r/m because that's the slowest that this version of nginx will allow
# there is a patch to support tth which would allow one request every 16 minutes 
# may no longer need this
# limit_req_zone $1 zone=shockapi:10m rate=1r/m;

server {
        listen 443;
        server_name {{ default .Env.server_name "localhost" }}

        # this resolver is the internal rancher resolver
        # see https://github.com/rancher/rancher/issues/7691#issuecomment-277635645
        resolver {{ default .Env.resolver "127.0.0.11" }} valid=5s ipv6=off;

        # taken from next-www
        client_max_body_size 100000m;
        client_body_temp_path /tmp 1 2;
        proxy_max_temp_file_size 0;
        proxy_headers_hash_max_size 4096;
        proxy_headers_hash_bucket_size 4096;
        # added kkeller 30sep2015 for kbase-2777
        proxy_request_buffering off;

        ssl on;
        # Letsencrypt generated certs
        ssl_certificate {{ default .Env.ssl_certificate "/kb/deployment/conf/localhost.crt" }};
        ssl_certificate_key {{ default .Env.ssl_certificate_key "/kb/deployment/conf/localhost.key" }};

        ssl_session_timeout 5m;
        #ssl_protocols TLSv1;
        #ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
        ssl_prefer_server_ciphers on;

        root /kb/deployment;
        index home.html home.shtml;

        access_by_lua_block {
                ngx.header["X-kbaseuser"] = proxymgr:get_session()
                return
        }

        location ^~ /bad_request {
                internal;
                content_by_lua '
                ngx.log(ngx.ERR, "badrequest")
                ';

                return 404;
        }

        location ^~ /proxy_map {
                default_type 'application/json';
                allow 127.0.0.1;
                allow 172.17.0.0/16;
                deny all;

                set $uri_base '/proxy_map';
                content_by_lua 'proxymgr:set_proxy()';

        }
        # Shutdown utility
        location ^~ /narrative_shutdown {
                default_type 'application/json';
                allow 127.0.0.1;
                allow 172.17.0.0/16;

                set $uri_base '/narrative_shutdown';
                content_by_lua 'proxymgr:narrative_shutdown()';

        }

        # Narrative redirect rule
        location ^~ /narrative/ {
                default_type 'text/plain';
                error_page 401 /index.html;
                set $target '';

                access_by_lua '
                                proxymgr:use_proxy()
                ';
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-Server $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy true;
                proxy_pass http://$target;
                proxy_redirect off;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_read_timeout 86400;
        }

        location ^~ /data_source_config.json {
                set $proxyhost narrative_version;
                proxy_pass http://$proxyhost:80/data_source_config.json;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
        location ^~ /(narrative_version) {
                proxy_pass http://$1:80/narrative_version;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Dynamic service rule.  This usees rancher DNS names to redirect
        location ~ /dynserv/([^/\.\:]+)/(.*) {
                proxy_pass http://$1:5000/;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Anything under services gets proxied to the servicename port 80
        location ~ /services/([^/\.\:]+)/?(.*) {
                proxy_pass http://$1:8080/$2;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grandfathered entry for kbase-ui as root 
        location ~ /?(.*) {
                set $kbaseui kbase-ui;
                proxy_pass http://$kbaseui/$1;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-Proto $scheme;
        }

}
# End of https server block

